##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# Coveralls example:
#    https://github.com/marketplace/actions/coveralls-github-action
#
##############################################################################

name: Build

on:
  # Triggered whenever push to the master branch
  push:
    branches: [ "master" ]

  # Triggered whenever a pull request is created on master
  pull_request:
    branches: [ "master" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-20.04
    
    steps:
      # We want to use GitHub CI checkout version 3 for checking out the branch
      - uses: actions/checkout@v3
      
      # Install some system packages
      - name: Install packages
        run: sudo apt install -y lcov
      
      - name: Matplotplusplus
        working-directory: ${{github.workspace}}/matplotplusplus
        run: mkdir build

      - name: Install 1
        working-directory: ${{github.workspace}}/matplotplusplus
        run: cd build

      - name: Install 2
        working-directory: ${{github.workspace}}/matplotplusplus/build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-O2" -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF

      - name: Install 3
        working-directory: ${{github.workspace}}/matplotplusplus/build
        run: sudo cmake --build . --parallel 2 --config Release
      
      - name: Install 4
        working-directory: ${{github.workspace}}/matplotplusplus/build
        run: sudo cmake --install .

      - name: Install 5
        working-directory: ${{github.workspace}}/NumCpp
        run: mkdir build

      - name: Install 5
        working-directory: ${{github.workspace}}/NumCpp
        run: cd build

      - name: Install 6
        working-directory: ${{github.workspace}}/NumCpp/build
        run: cmake -DNUMCPP_NO_USE_BOOST=ON ..

      - name: Install 7
        working-directory: ${{github.workspace}}/NumCpp/build
        run: sudo cmake --build . --target install .


      # Run CMake to setup compilation flags
      - name: Configure Coverage CMake 
        run: cmake -D COVERAGE=ON -D CMAKE_BUILD_TYPE=Debug -B ${{github.workspace}}/build 
      
      # Compile and executables
      - name: Build Coverage
        working-directory: ${{github.workspace}}/build
        run: make

      # Run test suite and compute code coverage
      - name: Run Test Coverage
        working-directory: ${{github.workspace}}/build
        run: make code_coverage
      
      # Upload coverage result to Coverage.io 
      - name: Upload result to Coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{github.workspace}}/build/coverage.info.cleaned

